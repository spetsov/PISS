@model PISS.Models.DiplomaViewModel
<div class="panel panel-success diploma-view">
    <div class="panel-heading">
        <h2>Diploma of @Model.Diploma.Student.Email</h2>
    </div>
    <div class="panel-body">

        @if (this.Model.Diploma.АssignmentFile != null && this.Model.Diploma.АssignmentFile != null)
        {
            <h3>Assignment</h3>
        
            <p>Document:</p>
            <a class="diploma-download" href='@Url.Action("Index", "Download", new { id = this.Model.Diploma.АssignmentFile.Id })' target = "_blank">@this.Model.Diploma.АssignmentFile.FileName</a>
    
            if (this.Model.Diploma.Approved == PISS.Models.ApprovedStatus.Unapproved)
            {
                using (Html.BeginForm("ApproveAssignment", "Teacher"))
                {
            <div>
                @Html.HiddenFor(m => m.Diploma.Id)

                @Html.LabelFor(m => m.Diploma.ReviewNotes, "Notes (If any):", new { @class = "review-notes-lbl" })
                @Html.TextAreaFor(m => m.Diploma.ReviewNotes)

                <input type="submit" value="Approve" class="btn btn-lg btn-success submit-review" />
            </div>
    
                }
            }
        }

    </div>
</div>


@if (this.Model.Diploma.Thesis != null && this.Model.Diploma.Thesis.SourceCodeFile != null)
{
            
    <div class="panel panel-success diploma-view">
        <div class="panel-heading">

            <h2>Diploma of @Model.Diploma.Student.Email</h2>
        </div>
        <div class="panel-body">

            <h3>Text:</h3>
            <p>@Html.Encode(this.Model.Diploma.Thesis.Text)</p>

            <h3>Summary in English:</h3>
            <p>@Html.Encode(this.Model.Diploma.Thesis.Summary_EN)</p>

            <h3>Summary in Bulgarian:</h3>
            <p>@Html.Encode(this.Model.Diploma.Thesis.Summary_BG)</p>

            <h3>Source code:</h3>
            <a href='@Url.Action("Index", "Download", new { id = this.Model.Diploma.Thesis.SourceCodeFile.Id })' target = "_blank">@this.Model.Diploma.Thesis.SourceCodeFile.FileName</a>

            using (Html.BeginForm("UpdateDiploma", "Teacher"))
            {
        
            <fieldset>
                @Html.HiddenFor(m => m.Diploma.Id)

                <legend>Upload your thesis</legend>
                <ol>
                    <li>
                        @Html.LabelFor(m => m.Diploma.DefenceDate)
                        @Html.Kendo().DateTimePickerFor(m => m.Diploma.DefenceDate)
                    </li>
                    <li>
                        @Html.LabelFor(m => m.Diploma.Consultants)
                        @(Html.Kendo().MultiSelectFor(m => m.SelectedConsultantsUserIds).BindTo((List<PISS.Models.UserViewModel>)ViewBag.Users)
                .DataValueField("UserId").DataTextField("Email"))
                    </li>
                    <li>
                        @Html.LabelFor(m => m.Diploma.DefenceCommisionMembers)
                        @(Html.Kendo().MultiSelectFor(m => m.SelectedDefenceCommisionMembersUserIds).BindTo((List<PISS.Models.UserViewModel>)ViewBag.Users)
                .DataValueField("UserId").DataTextField("Email"))
<<<<<<< HEAD
                    </li>
                    <li>
                        @Html.LabelFor(m => m.Diploma.LeadTeacher)
                        @(Html.Kendo().DropDownListFor(m => m.Diploma.LeadTeacherId).BindTo((List<PISS.Models.UserViewModel>)ViewBag.Users)
                .DataValueField("UserId").DataTextField("Email"))
                    </li>
                    <li>
                        @Html.LabelFor(m => m.Diploma.Grade)
                        @Html.TextBoxFor(m => m.Diploma.Grade)
                    </li>
                    <li>
                        <h3>Upload your review file:</h3>
                        @(Html.Kendo().Upload()
=======
            </li>
            <li>
                @Html.LabelFor(m => m.Diploma.LeadTeachers)
                @(Html.Kendo().MultiSelectFor(m => m.SelectedLeadTeachersUserIds).BindTo((List<PISS.Models.UserViewModel>)ViewBag.Users)
                .DataValueField("UserId").DataTextField("Email"))
            </li>
            <li>
                @Html.LabelFor(m => m.Diploma.Grade)
                @(Html.Kendo().DropDownListFor(m => m.Diploma.Grade).BindTo((List<PISS.Models.Grade>)ViewBag.Grades)
                .DataValueField("Value").DataTextField("Display"))
            </li>
            <li>
                <h3>Upload your review file:</h3>
                @(Html.Kendo().Upload()
>>>>>>> 6c4b90d2c00268e6b260748fbb3d4c34a388575e
            .Name("files").Multiple(false))
                    </li>
                </ol>
                <input type="submit" value="Submit" class="k-button" />
            </fieldset>
            }

            if (this.Model.Diploma.ReviewFile != null)
            {
            <h3>Review:</h3>
            <a href='@Url.Action("Index", "Download", new { id = this.Model.Diploma.ReviewFile.Id })' target = "_blank">@this.Model.Diploma.ReviewFile.FileName</a>
            }

        
        </div>
    </div>
}


